Operating System: macOS
CPU Information: Apple M1
Number of Available Cores: 8
Available memory: 16 GB
Elixir 1.13.4
Erlang 25.0-rc2

Benchmark suite executing with the following configuration:
warmup: 2 s
time: 5 s
memory time: 0 ns
parallel: 1
inputs: n = 100, n = 1000, n = 100000
Estimated total run time: 42 s

Benchmarking Aja.Vector.duplicate/2 with input n = 100...
Benchmarking Aja.Vector.duplicate/2 with input n = 1000...
Benchmarking Aja.Vector.duplicate/2 with input n = 100000...
Benchmarking List.duplicate/2 with input n = 100...
Warning: The function you are trying to benchmark is super fast, making measurements more unreliable!
This holds especially true for memory measurements.
See: https://github.com/PragTob/benchee/wiki/Benchee-Warnings#fast-execution-warning

You may disable this warning by passing print: [fast_warning: false] as configuration options.

Benchmarking List.duplicate/2 with input n = 1000...
Benchmarking List.duplicate/2 with input n = 100000...

##### With input n = 100 #####
Name                             ips        average  deviation         median         99th %
Aja.Vector.duplicate/2       10.56 M       94.73 ns ±22534.11%           0 ns         997 ns
List.duplicate/2              5.15 M      194.27 ns  ±1301.57%         197 ns         297 ns

Comparison: 
Aja.Vector.duplicate/2       10.56 M
List.duplicate/2              5.15 M - 2.05x slower +99.54 ns

##### With input n = 1000 #####
Name                             ips        average  deviation         median         99th %
Aja.Vector.duplicate/2        5.55 M       0.180 μs ±19237.83%           0 μs        1.00 μs
List.duplicate/2              0.47 M        2.13 μs   ±532.73%        2.00 μs        5.00 μs

Comparison: 
Aja.Vector.duplicate/2        5.55 M
List.duplicate/2              0.47 M - 11.81x slower +1.95 μs

##### With input n = 100000 #####
Name                             ips        average  deviation         median         99th %
Aja.Vector.duplicate/2        4.36 M        0.23 μs ±11402.88%           0 μs        1.00 μs
List.duplicate/2           0.00332 M      301.52 μs    ±36.18%      396.00 μs      437.00 μs

Comparison: 
Aja.Vector.duplicate/2        4.36 M
List.duplicate/2           0.00332 M - 1315.57x slower +301.29 μs
